# -*- coding: utf-8 -*-
"""Expense tracker .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1na-d8wGDtbS5Fcfy5P2I1nMot6xG04RE
"""

import tkinter as tk
from tkinter import messagebox
import csv
import os
from datetime import datetime

# File name for saving history
FILE_NAME = "expense_history.csv"

# Create file if not exists
if not os.path.exists(FILE_NAME):
    with open(FILE_NAME, "w", newline="") as f:
        writer = csv.writer(f)
        writer.writerow(["DateTime", "Members", "TotalExpense", "PerPersonShare", "SettlementDetails"])

def calculate_split():
    members_data = members_entry.get()
    if not members_data:
        messagebox.showerror("Error", "Please enter members and contributions!")
        return

    try:
        members = {}
        for item in members_data.split(","):
            name, amount = item.split(":")
            members[name.strip()] = float(amount.strip())
    except:
        messagebox.showerror("Error", "Invalid format! Use Name:Amount")
        return

    total_expense = sum(members.values())
    per_person = round(total_expense / len(members), 2)

    result = f"👥 Total Members: {len(members)}\n💰 Total Expense: ₹{total_expense}\n⚖️ Each should pay: ₹{per_person}\n\n"
    settlement = []

    for name, amount in members.items():
        diff = round(amount - per_person, 2)
        if diff > 0:
            result += f"{name} should get back: ₹{diff}\n"
            settlement.append(f"{name} gets back ₹{diff}")
        elif diff < 0:
            result += f"{name} should pay: ₹{abs(diff)}\n"
            settlement.append(f"{name} pays ₹{abs(diff)}")
        else:
            result += f" {name} is settled.\n"
            settlement.append(f"{name} is settled")

    result_label.config(text=result, fg="white")

    # Current date & time
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # Save to CSV
    with open(FILE_NAME, "a", newline="") as f:
        writer = csv.writer(f)
        writer.writerow([now, ", ".join(members.keys()), total_expense, per_person, " | ".join(settlement)])

    messagebox.showinfo("Saved", "Expense record saved successfully!")

# Tkinter main window
root = tk.Tk()
root.title("Expense Splitter App ")
root.geometry("650x450")

# Set background gradient effect (using frames layered with colors)
bg_frame = tk.Frame(root, bg="#2c3e50")
bg_frame.place(relwidth=1, relheight=1)

header = tk.Label(root, text="Expense Splitter ",
                  font=("Arial", 20, "bold"), bg="#34495e", fg="white", pady=10)
header.pack(fill="x")

tk.Label(root, text="Enter members and contributions\nFormat ➝ Name:Amount, Name:Amount ...",
         font=("Arial", 12, "bold"), bg="#2c3e50", fg="white").pack(pady=15)

members_entry = tk.Entry(root, width=45, font=("Arial", 12), bg="#ecf0f1", fg="black", relief="solid", bd=2)
members_entry.pack(pady=5)

calc_btn = tk.Button(root, text="Calculate & Save", command=calculate_split,
                     font=("Arial", 12, "bold"), bg="#27ae60", fg="white", relief="raised", bd=3, padx=10, pady=5)
calc_btn.pack(pady=10)

result_label = tk.Label(root, text="", font=("Arial", 12, "bold"), justify="left", bg="#2c3e50")
result_label.pack(pady=20)

footer = tk.Label(root, text="Developed with in Python Tkinter",
                  font=("Arial", 10, "italic"), bg="#34495e", fg="white", pady=5)
footer.pack(side="bottom", fill="x")

root.mainloop()

